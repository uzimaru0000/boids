{"id":"../node_modules/elm-canvas/elm-canvas.js","dependencies":[{"name":"/Users/oba/Documents/elm/boids/package.json","includedInParent":true,"mtime":1545887555052},{"name":"/Users/oba/Documents/elm/boids/node_modules/elm-canvas/package.json","includedInParent":true,"mtime":1545887551214}],"generated":{"js":"customElements.define(\n  \"elm-canvas\",\n  class extends HTMLElement {\n    constructor() {\n      super();\n      this.commands = [];\n      this.mounted = false;\n    }\n\n    set cmds(values) {\n      this.commands = values;\n      this.render();\n    }\n\n    connectedCallback() {\n      requestAnimationFrame(() => {\n        this.canvas = this.querySelector(\"canvas\");\n        this.context = this.canvas.getContext(\"2d\");\n        this.mounted = true;\n\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        this.canvas.style.width = this.canvas.width;\n        this.canvas.style.height = this.canvas.height;\n        this.canvas.width = this.canvas.width * devicePixelRatio;\n        this.canvas.height = this.canvas.height * devicePixelRatio;\n        this.context.scale(devicePixelRatio, devicePixelRatio);\n\n        this.render();\n      });\n    }\n\n    render() {\n      if (!this.mounted) return;\n      // Iterate over the commands in reverse order as that's how the Elm side\n      // builds them as with the linked lists\n      for (let i = this.commands.length - 1; i >= 0; i--) {\n        this.execCommand(this.commands[i]);\n      }\n      this.commands = [];\n    }\n\n    execCommand(cmd) {\n      if (cmd.type === \"function\") {\n        this.context[cmd.name](...cmd.args);\n      } else if (cmd.type === \"field\") {\n        this.context[cmd.name] = cmd.value;\n      }\n    }\n  }\n);\n","map":{"mappings":[{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/elm-canvas/elm-canvas.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"../node_modules/elm-canvas/elm-canvas.js":"customElements.define(\n  \"elm-canvas\",\n  class extends HTMLElement {\n    constructor() {\n      super();\n      this.commands = [];\n      this.mounted = false;\n    }\n\n    set cmds(values) {\n      this.commands = values;\n      this.render();\n    }\n\n    connectedCallback() {\n      requestAnimationFrame(() => {\n        this.canvas = this.querySelector(\"canvas\");\n        this.context = this.canvas.getContext(\"2d\");\n        this.mounted = true;\n\n        var devicePixelRatio = window.devicePixelRatio || 1;\n        this.canvas.style.width = this.canvas.width;\n        this.canvas.style.height = this.canvas.height;\n        this.canvas.width = this.canvas.width * devicePixelRatio;\n        this.canvas.height = this.canvas.height * devicePixelRatio;\n        this.context.scale(devicePixelRatio, devicePixelRatio);\n\n        this.render();\n      });\n    }\n\n    render() {\n      if (!this.mounted) return;\n      // Iterate over the commands in reverse order as that's how the Elm side\n      // builds them as with the linked lists\n      for (let i = this.commands.length - 1; i >= 0; i--) {\n        this.execCommand(this.commands[i]);\n      }\n      this.commands = [];\n    }\n\n    execCommand(cmd) {\n      if (cmd.type === \"function\") {\n        this.context[cmd.name](...cmd.args);\n      } else if (cmd.type === \"field\") {\n        this.context[cmd.name] = cmd.value;\n      }\n    }\n  }\n);\n"},"lineCount":51}},"hash":"f1a24d3015487ecfead1674105f43d78","cacheData":{"env":{}}}